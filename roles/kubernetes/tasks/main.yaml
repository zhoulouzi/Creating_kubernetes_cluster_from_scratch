---

- name: create basic directory
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - "{{ CLUSTER_DATA_PATH }}"
    - "{{ CLUSTER_DATA_PATH }}/certs/"
    - "{{ CLUSTER_DATA_PATH }}/etcd/"
    - "{{ CLUSTER_DATA_PATH }}/kubelet/"
    - "{{ CLUSTER_DATA_PATH }}/kube-proxy/"
    - "{{ CLUSTER_DATA_PATH }}/kubelet/manifests/"

- name: add apiserever hostname into hosts
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[item].ansible_host }} {{ CLUSTER_API_HOSTNAME }}"
    state: present
  loop: "{{ groups['master'] }}"
      

- name: copy ca keys 
  copy:
    src: "./cfssl_certs/{{ item.filename }}"
    dest: "{{ CLUSTER_DATA_PATH }}/{{ item.destpath }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { filename: 'ca.pem', destpath: 'certs/ca.pem', mode: '0644'}
    - { filename: 'ca-key.pem', destpath: 'certs/ca-key.pem', mode: '0600'}

- name: copy keys and secret file about master
  copy:
    src: "./cfssl_certs/{{ item.filename }}"
    dest: "{{ CLUSTER_DATA_PATH }}/{{ item.destpath }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  loop:
    - { filename: 'api-server.pem', destpath: 'certs/api-server.pem', mode: '0644'}
    - { filename: 'api-server-key.pem', destpath: 'certs/api-server-key.pem', mode: '0600'}
    - { filename: 'token-auth-file', destpath: 'certs/token-auth-file', mode: '0644'}
  when: inventory_hostname in groups['master']
  
- name: copy ca cert to the host additiinal CA Certs
  copy:
    src: "{{ CLUSTER_DATA_PATH }}/certs/ca.pem" 
    dest: /usr/local/share/ca-certificates/ca.pem
    remote_src: yes
  notify:
    - update ca certificates

- name: copy master manifests file
  template:
    src: "templates/{{item.filename}}"
    dest: "{{ CLUSTER_DATA_PATH }}/{{item.destpath}}"
  loop:
    - {filename: 'master-component/etcd.yaml.template', destpath: 'kubelet/manifests/etcd.yaml'}
    - {filename: 'master-component/kube-apiserver.yaml.template', destpath: 'kubelet/manifests/kube-apiserver.yaml'}
    - {filename: 'master-component/kube-controller.yaml.template', destpath: 'kubelet/manifests/kube-controller.yaml'}
    - {filename: 'master-component/kube-scheduler.yaml.template', destpath: 'kubelet/manifests/kube-scheduler.yaml'}
    - {filename: 'audit-policy.yaml', destpath: 'certs/audit-policy.yaml'}
  when: inventory_hostname in groups['master']

- name: copy kubelet binary
  copy:
    src: ./binaries/kubelet
    dest: /usr/local/bin/kubelet
    owner: root
    group: root
    mode: 0750

# master kubelet
- name: copy kubelet kubeconfig
  copy: 
    src: ./kubeconfig/kubelet-{{inventory_hostname}}.kubeconfig
    dest: "{{ CLUSTER_DATA_PATH }}/kubelet/kubeconfig"
    owner: root
    group: root
    mode: 0600
  when: inventory_hostname in groups['master']
# node kubelet
- name: copy kubelet kubeconfig
  copy: 
    src: ./kubeconfig/kubelet-bootstrap.kubeconfig
    dest: "{{ CLUSTER_DATA_PATH }}/kubelet/kubelet-bootstrap.kubeconfig"
    owner: root
    group: root
    mode: 0600
  when: inventory_hostname in groups['node']

# master kubelet systemd config
- name: copy kubelet systemd config
  template:
      dest: /lib/systemd/system/kubelet.service
      src: templates/kubelet/kubelet.systemd.template-master
  notify:
    - start kubelet
  when: inventory_hostname in groups['master']
# node kublet systemd config
- name: copy kubelet systemd config
  template:
      dest: /lib/systemd/system/kubelet.service
      src: templates/kubelet/kubelet.systemd.template
  notify:
    - start kubelet
  when: inventory_hostname in groups['node']

- name: copy kube-proxy binary
  copy:
    src: ./binaries/kube-proxy
    dest: /usr/local/bin/kube-proxy
    owner: root
    group: root
    mode: 0750

- name: copy kube-proxy kubeconfig
  copy: 
    src: ./kubeconfig/kube-proxy.kubeconfig
    dest: "{{ CLUSTER_DATA_PATH }}/kube-proxy/kubeconfig" 
    owner: root
    group: root
    mode: 0600

- name: copy kube-proxy systemd config
  template:
      dest: /lib/systemd/system/kube-proxy.service 
      src: templates/kube-proxy/kube-proxy.systemd.template
  notify:
    - start kube-proxy

