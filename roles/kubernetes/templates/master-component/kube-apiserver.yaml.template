apiVersion: v1
kind: Pod
metadata:
  name: kube-apiserver
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-apiserver
    - --allow-privileged=true
    # default advertise-address is the value of bind-address, if bind-address is unspecified,the host deafult interface address will be used.
    - --advertise-address={{ansible_host}} 
    - --bind-address={{ ansible_host }}
    - --service-cluster-ip-range=10.96.0.0/12
    - --etcd-servers={% for host in groups['master'] %}http://{{ hostvars[host]['ansible_host'] }}:2379{% if not loop.last %},{% endif %}{% endfor %}

    - --client-ca-file=/srv/kubernetes/ca.pem
    - --tls-cert-file=/srv/kubernetes/api-server.pem
    - --tls-private-key-file=/srv/kubernetes/api-server-key.pem
    - --admission-control=Initializers,NamespaceLifecycle,LimitRanger,ServiceAccount,PersistentVolumeLabel,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,ResourceQuota
    - --authorization-mode=Node,RBAC
    - --service-node-port-range=0-65535
    #TODO Diff with kubeadm,Use Token authentication file instead of Bootstrap Tokens for kubelet-tls-bootstrapping.
    #- --enable-bootstrap-token-auth=true
    - --token-auth-file=/srv/kubernetes/token-auth-file
    # Start Configure the Aggregation Layer
    - --requestheader-client-ca-file=/srv/kubernetes/kubernetes-front-proxy-ca.pem
    - --requestheader-allowed-names=front-proxy-client
    - --requestheader-extra-headers-prefix=X-Remote-Extra-
    - --requestheader-group-headers=X-Remote-Group
    - --requestheader-username-headers=X-Remote-User
    - --proxy-client-cert-file=/srv/kubernetes/front-proxy-client.pem
    - --proxy-client-key-file=/srv/kubernetes/front-proxy-client-key.pem
    # End Configure the Aggregation Layer
    # Start Config Audit
    - --audit-log-path=/var/log/kube-audit 
    - --audit-log-format=json
    - --audit-log-maxage=7
    - --audit-log-maxbackup=5
    - --audit-log-maxsize=100
    - --audit-log-mode=batch
    - --audit-policy-file=/srv/kubernetes/audit-policy.yaml
    # End Config Audit
    image: k8s.gcr.io/kube-apiserver:v1.13.0
    livenessProbe:
      failureThreshold: 3
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 8080
        scheme: HTTP
      initialDelaySeconds: 15
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 15
    name: kube-apiserver
    volumeMounts:
    - mountPath: /srv/kubernetes
      name: srvkube
      readOnly: true
    - mountPath: /etc/ssl
      name: host-cert-folder
      readOnly: true
    - mountPath: /var/log
      name: host-var-log
  hostNetwork: true
  volumes:
  - hostPath:
      path: {{ CLUSTER_DATA_PATH }}/certs
      type: ""
    name: srvkube
  - hostPath:
      path: /etc/ssl
      type: ""
    name: host-cert-folder
  - hostPath:
      path: /var/log
      type: ""
    name: host-var-log